{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0258a986276272fd6753","webpack:///external \"react\"","webpack:///external \"styled-components\"","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///./src/components/FoldOut/index.tsx","webpack:///./src/components/FoldOut/style.tsx"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","Function","eval","e","window","global","MapShim","Map","getIndex","arr","key","result","some","entry","index","anonymous","__entries__","prototypeAccessors","size","length","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","list","defineProperties","isBrowser","document","global$1","Math","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","ref","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","arguments","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","map","WeakMap","ResizeObserver","method","apply","__webpack_exports__","FoldOut","_super","_this","state","contentHeight","undefined","resizeObserver","__WEBPACK_IMPORTED_MODULE_1_resize_observer_polyfill__","setState","error","console","warn","__extends","componentDidMount","contentRef","_a","componentWillUnmount","render","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_2__style__","isOpen","children","__WEBPACK_IMPORTED_MODULE_0_react__","StyledFoldOut","__WEBPACK_IMPORTED_MODULE_0_styled_components___default","div","withConfig","displayName","componentId","templateObject_1","__makeTemplateObject"],"mappings":"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","file":"FoldOut.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"styled-components\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bricks\", [\"react\", \"styled-components\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bricks\"] = factory(require(\"react\"), require(\"styled-components\"));\n\telse\n\t\troot[\"bricks\"] = factory(root[\"react\"], root[\"styled-components\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 533);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0258a986276272fd6753","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 38 39","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"styled-components\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 290\n// module chunks = 0 1 2 3 17 18 28","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 363\n// module chunks = 2 3 18 28","import React, { Component } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport StyledFoldOut from './style';\n\ntype ContentProps = {\n    contentHeight?: StateType['contentHeight'];\n    isOpen: PropsType['isOpen'];\n};\n\ntype StateType = {\n    contentHeight?: number;\n};\n\ntype PropsType = {\n    isOpen: boolean;\n};\n\nclass FoldOut extends Component<PropsType, StateType> {\n    private contentRef: HTMLDivElement;\n    private resizeObserver: ResizeObserver;\n\n    public constructor(props: PropsType) {\n        super(props);\n\n        this.state = {\n            contentHeight: undefined,\n        };\n\n        try {\n            this.resizeObserver = new ResizeObserver((entries: Array<ResizeObserverEntry>): void => {\n                entries.forEach((entry: ResizeObserverEntry): void => {\n                    this.setState({\n                        contentHeight: entry.contentRect.height,\n                    });\n                });\n            });\n        } catch (error) {\n            console.warn(`\n                ResizeObserver is not available in this environment.\n                 Folding animation will be unavailable. Fallback used.\n            `);\n        }\n    }\n\n    public componentDidMount(): void {\n        try {\n            this.resizeObserver.observe(this.contentRef);\n        } catch {\n            // no-op when ResizeObserver is not available.\n        }\n    }\n\n    public componentWillUnmount(): void {\n        try {\n            this.resizeObserver.unobserve(this.contentRef);\n        } catch {\n            // no-op when ResizeObserver is not available.\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <StyledFoldOut isOpen={this.props.isOpen} contentHeight={this.state.contentHeight}>\n                <div\n                    ref={(ref): void => {\n                        this.contentRef = ref as HTMLDivElement;\n                    }}\n                >\n                    {this.props.children}\n                </div>\n            </StyledFoldOut>\n        );\n    }\n}\n\nexport default FoldOut;\nexport { ContentProps, StateType, PropsType };\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FoldOut/index.tsx","import { default as _R } from 'react';\nimport styled, { StyledComponentClass as _S } from 'styled-components';\nimport { ContentProps } from '.';\n\nconst StyledFoldOut = styled.div`\n    transition: height 300ms cubic-bezier(0.5, 0, 0.1, 1);\n    overflow: hidden;\n    height: ${(props: ContentProps): string => {\n        if (!props.isOpen) {\n            return '0';\n        }\n\n        if (props.contentHeight !== undefined) {\n            return `${props.contentHeight}px`;\n        }\n\n        return 'auto';\n    }};\n`;\n\nexport default StyledFoldOut;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FoldOut/style.tsx"],"sourceRoot":""}